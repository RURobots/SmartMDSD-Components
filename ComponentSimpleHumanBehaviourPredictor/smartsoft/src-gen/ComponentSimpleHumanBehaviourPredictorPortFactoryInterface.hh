//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef COMPONENTSIMPLEHUMANBEHAVIOURPREDICTOR_PORTFACTORYINTERFACE_HH_
#define COMPONENTSIMPLEHUMANBEHAVIOURPREDICTOR_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <DomainHumanTracking/CommHumanPositionPredictions.hh>
#include <DomainHumanTracking/CommHumanPositionPredictionsACE.hh>
#include <DomainHumanTracking/CommHumanPositionPredictionsRequest.hh>
#include <DomainHumanTracking/CommHumanPositionPredictionsRequestACE.hh>
#include <DomainHumanTracking/CommHumanPositionsAndVelocities.hh>
#include <DomainHumanTracking/CommHumanPositionsAndVelocitiesACE.hh>

#include <chrono>

// include component's main class
#include "ComponentSimpleHumanBehaviourPredictor.hh"

// forward declaration
class ComponentSimpleHumanBehaviourPredictor;

class ComponentSimpleHumanBehaviourPredictorPortFactoryInterface {
public:
	ComponentSimpleHumanBehaviourPredictorPortFactoryInterface() { };
	virtual ~ComponentSimpleHumanBehaviourPredictorPortFactoryInterface() { };

	virtual void initialize(ComponentSimpleHumanBehaviourPredictor *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::IPushClientPattern<DomainHumanTracking::CommHumanPositionsAndVelocities> * createHumanSkeletonsPushServiceIn() = 0;
	
	virtual Smart::IPushServerPattern<DomainHumanTracking::CommHumanPositionPredictions> * createHumanPredictionsPushServiceOut(const std::string &serviceName) = 0;
	virtual Smart::IQueryServerPattern<DomainHumanTracking::CommHumanPositionPredictionsRequest, DomainHumanTracking::CommHumanPositionPredictions> * createHumanPredictionsRequestAnsw(const std::string &serviceName) = 0;

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* COMPONENTSIMPLEHUMANBEHAVIOURPREDICTOR_PORTFACTORYINTERFACE_HH_ */
